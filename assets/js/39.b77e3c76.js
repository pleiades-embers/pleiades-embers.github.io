(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{224:function(v,e,t){"use strict";t.r(e);var _=t(0),a=Object(_.a)({},function(){var v=this,e=v.$createElement,t=v._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h3",{attrs:{id:"vue的生命周期有哪些，分别有哪些作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue的生命周期有哪些，分别有哪些作用","aria-hidden":"true"}},[v._v("#")]),v._v(" vue的生命周期有哪些，分别有哪些作用")]),v._v(" "),t("ul",[t("li",[v._v("beforeCreate  创建前的状态，初始化事件和生命周期。")]),v._v(" "),t("li",[v._v("created 创建完毕状态")]),v._v(" "),t("li",[v._v("beforeMount 挂载前状态， 是否有元素el，是否有模板，是否渲染到了函数内，是否作为模板进行了outerHTML渲染到了页")]),v._v(" "),t("li",[v._v("mounted 挂载结束状态，渲染到真正的DOM。")]),v._v(" "),t("li",[v._v("beforeUpdate 可以拿到实例化改变前的状态")]),v._v(" "),t("li",[v._v("Updated拿到变动完成的状态")]),v._v(" "),t("li",[v._v("beforeDestory 消亡前的状态")]),v._v(" "),t("li",[v._v("destoryed 实例化或组件被摧毁消亡")])]),v._v(" "),t("h3",{attrs:{id:"简述v-if-和v-show的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简述v-if-和v-show的作用","aria-hidden":"true"}},[v._v("#")]),v._v(" 简述v-if 和v-show的作用")]),v._v(" "),t("ul",[t("li",[v._v("都能实现指定内容的显示和隐藏效果")]),v._v(" "),t("li",[v._v("v-if是通过 创建和销毁dom节点显示隐藏")]),v._v(" "),t("li",[v._v("v-show 是通过 display:none 来实现显示隐藏")])]),v._v(" "),t("h3",{attrs:{id:"什么是跨域？什么是同源策略？项目中你是如何解决跨域的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是跨域？什么是同源策略？项目中你是如何解决跨域的","aria-hidden":"true"}},[v._v("#")]),v._v(" 什么是跨域？什么是同源策略？项目中你是如何解决跨域的")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("同源策略是浏览器的一种安全策略，所谓同源是指，域名，协议，端口完全相同")])]),v._v(" "),t("li",[t("p",[v._v("一个域的页面去请求另一个域的资源 （协议，端口，主域名，子域名）不同会造成跨域")])]),v._v(" "),t("li",[t("p",[v._v("jsonp跨域 动态添加一个"),t("code",[v._v("<script>")]),v._v("标签 这个标签的src是没有跨域限制的")])]),v._v(" "),t("li",[t("p",[v._v("cors跨域资源共享 在请求服务器的时候,服务器给一个响应头，告诉客户段，这些数据可以访问")])])]),v._v(" "),t("h3",{attrs:{id:"vue循环中为什么要加上key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue循环中为什么要加上key","aria-hidden":"true"}},[v._v("#")]),v._v(" vue循环中为什么要加上key?")]),v._v(" "),t("ul",[t("li",[v._v("加上key（具有唯一性） 后 vue中的diff算法就会找到这个节点插入新的节点")]),v._v(" "),t("li",[v._v("key的作用主要是为了高效的更新虚拟DOM")])]),v._v(" "),t("h3",{attrs:{id:"mvvm是什么？你所了解的mvvm框架有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mvvm是什么？你所了解的mvvm框架有哪些","aria-hidden":"true"}},[v._v("#")]),v._v(" mvvm是什么？你所了解的mvvm框架有哪些")]),v._v(" "),t("p",[v._v("View 层： 视图层 主要给用户展示各种信息")]),v._v(" "),t("p",[v._v("Model层：数据层")]),v._v(" "),t("p",[v._v("VueModel层：视图模型层 是view和Model沟通的桥梁")]),v._v(" "),t("p",[v._v("一方面它实现了Data Binding,将model的改变实时的反应到View中")]),v._v(" "),t("p",[v._v("另一方面它实现了DOM Listener,当DOM发生一些事件时,可以监听到,并在需要的情况先改变对应的Data")]),v._v(" "),t("p",[v._v("vue  react angular  ember drop")]),v._v(" "),t("h3",{attrs:{id:"vue双向绑定的原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue双向绑定的原理","aria-hidden":"true"}},[v._v("#")]),v._v(" vue双向绑定的原理")]),v._v(" "),t("p",[v._v("vue数据双向绑定通过‘数据劫持’ + 订阅发布模式实现")]),v._v(" "),t("h3",{attrs:{id:"http响应的状态吗常见有哪些-其含义是什么？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http响应的状态吗常见有哪些-其含义是什么？","aria-hidden":"true"}},[v._v("#")]),v._v(" http响应的状态吗常见有哪些?其含义是什么？")]),v._v(" "),t("p",[v._v("2XX 成功")]),v._v(" "),t("p",[v._v("3xx 重定向")]),v._v(" "),t("p",[v._v("4XX 客户端错误")]),v._v(" "),t("p",[v._v("5XX 服务器错误")]),v._v(" "),t("h3",{attrs:{id:"常见的http请求方法（请求动词）有哪些及其含义，最好举例说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的http请求方法（请求动词）有哪些及其含义，最好举例说明","aria-hidden":"true"}},[v._v("#")]),v._v(" 常见的http请求方法（请求动词）有哪些及其含义，最好举例说明")]),v._v(" "),t("p",[v._v("get 在服务器取出资源")]),v._v(" "),t("p",[v._v("put 在服务器更新资源")]),v._v(" "),t("p",[v._v("delete 在服务器删除资源")]),v._v(" "),t("p",[v._v("patch 在服务器修改 单条数据")]),v._v(" "),t("p",[v._v("post 在服务器添加资源")]),v._v(" "),t("h3",{attrs:{id:"watch、computed和methods之间的对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#watch、computed和methods之间的对比","aria-hidden":"true"}},[v._v("#")]),v._v(" watch、computed和methods之间的对比")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("computed")]),v._v(" 属性的结果会被缓存，除非依赖的响应式属性变化才会重新计算。主要当作属性来使用")]),v._v(" "),t("li",[t("code",[v._v("methods")]),v._v("方法表示一个具体的操作，主要书写业务逻辑")]),v._v(" "),t("li",[t("code",[v._v("watch")]),v._v(" 一个对象，键是需要观察的表达式，值是对应回调函数。主要用来监听某些特定的数据变换，从而惊醒某些具体的业务逻辑操作")])]),v._v(" "),t("h3",{attrs:{id:"promise-三种时态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise-三种时态","aria-hidden":"true"}},[v._v("#")]),v._v(" promise 三种时态")]),v._v(" "),t("ol",[t("li",[v._v("pending:等待状态，比如正在进行网络请求，或者定时器没有到时间")]),v._v(" "),t("li",[v._v("fulfill: 满足状态，当我们主动回调了resolve 时，就处于该状态，并且会回调.then()")]),v._v(" "),t("li",[v._v("reject: 拒绝状态，当我们主动回调了reject时，就处于该状态，并且会回调。catch()")])]),v._v(" "),t("h3",{attrs:{id:"vue路由传递参数的方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue路由传递参数的方式","aria-hidden":"true"}},[v._v("#")]),v._v(" vue路由传递参数的方式")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("params 的类型")]),v._v(" "),t("ul",[t("li",[v._v("配置路由格式 ：/router/:id")]),v._v(" "),t("li",[v._v("传递的方式:在path后面跟上对应的值")]),v._v(" "),t("li",[v._v("传递后形成的路径 ：/router/123  ,/router/abc")])])]),v._v(" "),t("li",[t("p",[v._v("query 类型")]),v._v(" "),t("ul",[t("li",[v._v("配置路由格式 ：/router ,也就是普通配置")]),v._v(" "),t("li",[v._v("传递的方式:对象中使用query的key作为传递方式")]),v._v(" "),t("li",[v._v("传递后形成的路径:/router?id=123,/router?id=abc")])])])]),v._v(" "),t("h3",{attrs:{id:"vue程序运行过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue程序运行过程","aria-hidden":"true"}},[v._v("#")]),v._v(" vue程序运行过程")]),v._v(" "),t("ol",[t("li",[v._v("当吧模板传给vue时 vue会将模板保存在"),t("code",[v._v("vm.options.tmplate")])]),v._v(" "),t("li",[v._v("解析成 ast(抽象语法树 abstract syntax tree)")]),v._v(" "),t("li",[v._v("compile   成render函数")]),v._v(" "),t("li",[v._v("render 成虚拟dom树")]),v._v(" "),t("li",[v._v("最后把虚拟dom树渲染成真正的dom")])]),v._v(" "),t("blockquote",[t("p",[v._v("runtime-compiler")])]),v._v(" "),t("blockquote",[t("p",[v._v("template=>ast=>render=>vdom=>UI")])]),v._v(" "),t("blockquote",[t("p",[v._v("runtime-only")])]),v._v(" "),t("blockquote",[t("p",[v._v("render=>vdom=>UI")])])])},[],!1,null,null,null);e.default=a.exports}}]);